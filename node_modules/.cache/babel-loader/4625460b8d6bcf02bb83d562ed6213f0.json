{"ast":null,"code":"var _jsxFileName = \"E:\\\\front-end\\\\src\\\\screens\\\\ForumScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Forum from \"../components/forum/Forum\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ForumScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForumScreen() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const history = useHistory();\n  const [questions, setQuestions] = useState([]);\n\n  const add = async () => {\n    if (!user) {\n      history.push(\"/signin\");\n    } else {\n      const data = {\n        title: input,\n        content: input,\n        date: Date().toLocaleString()\n      };\n      await axios.post(\"/forum/\", data, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setQuestions([res.data, ...questions]);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    /*     axios\r\n      .get(\"/forum/\")\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setQuestions(res.data);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error.message)); */\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input__question\",\n        placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi\",\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: add,\n        children: \"\\u0110\\u0103ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forum\",\n      children: questions.map(cmt => {\n        return /*#__PURE__*/_jsxDEV(Forum, {\n          cmt: cmt\n        }, cmt.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForumScreen, \"GvfIgTmyRGFTMjOGnnNk//xRC2U=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = ForumScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForumScreen\");","map":{"version":3,"sources":["E:/front-end/src/screens/ForumScreen.js"],"names":["React","useState","useEffect","Forum","TextField","Button","useDispatch","useSelector","useHistory","axios","ForumScreen","input","setInput","dispatch","user","selectUser","history","questions","setQuestions","add","push","data","title","content","date","Date","toLocaleString","post","headers","Authorization","localStorage","getItem","then","res","status","catch","error","console","log","e","target","value","map","cmt","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,mBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGP,WAAW,CAACQ,UAAD,CAAxB;AACA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMkB,GAAG,GAAG,YAAY;AACtB,QAAI,CAACL,IAAL,EAAW;AACTE,MAAAA,OAAO,CAACI,IAAR,CAAa,SAAb;AACD,KAFD,MAEO;AACL,YAAMC,IAAI,GAAG;AACXC,QAAAA,KAAK,EAAEX,KADI;AAEXY,QAAAA,OAAO,EAAEZ,KAFE;AAGXa,QAAAA,IAAI,EAAEC,IAAI,GAAGC,cAAP;AAHK,OAAb;AAKA,YAAMjB,KAAK,CACRkB,IADG,CACE,SADF,EACaN,IADb,EACmB;AACrBO,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAA7B;AADY,OADnB,EAIHC,IAJG,CAIGC,GAAD,IAAS;AACb,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBhB,UAAAA,YAAY,CAAC,CAACe,GAAG,CAACZ,IAAL,EAAW,GAAGJ,SAAd,CAAD,CAAZ;AACD;AACF,OARG,EASHkB,KATG,CASIC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAXG,CAAN;AAYD;AACF,GAtBD;;AAuBAlC,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACG,GATQ,EASN,CAACW,QAAD,CATM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,iBADL;AAEE,QAAA,WAAW,EAAC,2BAFd;AAGE,QAAA,QAAQ,EAAG0B,CAAD,IAAO3B,QAAQ,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAEtB,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGF,SAAS,CAACyB,GAAV,CAAeC,GAAD,IAAS;AACtB,4BAAO,QAAC,KAAD;AAAoB,UAAA,GAAG,EAAEA;AAAzB,WAAYA,GAAG,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAmBD;;GA1DuBlC,W;UAELJ,W,EACJC,W,EACGC,U;;;KAJME,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Forum from \"../components/forum/Forum\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./ForumScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ForumScreen() {\r\n  const [input, setInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const history = useHistory();\r\n  const [questions, setQuestions] = useState([]);\r\n  const add = async () => {\r\n    if (!user) {\r\n      history.push(\"/signin\");\r\n    } else {\r\n      const data = {\r\n        title: input,\r\n        content: input,\r\n        date: Date().toLocaleString(),\r\n      };\r\n      await axios\r\n        .post(\"/forum/\", data, {\r\n          headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            setQuestions([res.data, ...questions]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    /*     axios\r\n      .get(\"/forum/\")\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setQuestions(res.data);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error.message)); */\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className=\"top\">\r\n        <TextField\r\n          id=\"input__question\"\r\n          placeholder=\"Nhập câu hỏi\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={add}>\r\n          Đăng\r\n        </Button>\r\n      </div>\r\n      <div className=\"forum\">\r\n        {questions.map((cmt) => {\r\n          return <Forum key={cmt.id} cmt={cmt} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}