{"ast":null,"code":"var _jsxFileName = \"E:\\\\front-end\\\\src\\\\components\\\\admin\\\\TableAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { logout } from \"../../features/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function TableAdmin({\n  columns\n}) {\n  _s();\n\n  const [selectionModel, setselectionModel] = useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n\n  const moveToAddCourseScreen = () => {\n    history.push('/course/addcourse');\n  };\n\n  const deleteCourse = async () => {\n    if (selectionModel === null || selectionModel === void 0 ? void 0 : selectionModel[0]) {\n      const id = selectionModel[0];\n      await axios.delete(\"/course/\", {\n        data: {\n          id: id\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setRows(rows.filter(r => r.id !== id));\n          window.location.href = \"/admin/course\";\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios.get(\"/account/check-login/\", {\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token')\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        axios.get(\"/course/\", {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            setRows(res.data);\n          }\n        }).catch(error => console.log(error.message));\n      }\n    }).catch(error => {});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true,\n        onSelectionModelChange: newSelection => {\n          setselectionModel(newSelection.selectionModel);\n        },\n        selectionModel: selectionModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_btn\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: moveToAddCourseScreen,\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/course/updatecourse/${selectionModel === null || selectionModel === void 0 ? void 0 : selectionModel[0]}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            startIcon: /*#__PURE__*/_jsxDEV(UpdateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: deleteCourse,\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableAdmin, \"J4JeB2tfB42a9/yRujy/aN+++Xs=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = TableAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableAdmin\");","map":{"version":3,"sources":["E:/front-end/src/components/admin/TableAdmin.js"],"names":["React","useState","useEffect","DataGrid","Button","AddIcon","UpdateIcon","DeleteIcon","useHistory","makeStyles","axios","Link","logout","useDispatch","useStyles","theme","button","margin","spacing","TableAdmin","columns","selectionModel","setselectionModel","classes","history","dispatch","rows","setRows","moveToAddCourseScreen","push","deleteCourse","id","delete","data","then","res","status","filter","r","window","location","href","catch","error","alert","get","headers","Authorization","localStorage","getItem","console","log","message","height","width","newSelection"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect} from 'react'\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport { logout } from \"../../features/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TableAdmin({columns}) {\r\n    const [selectionModel, setselectionModel] = useState([]);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [rows, setRows] = useState([]);\r\n    const moveToAddCourseScreen=()=>{\r\n      history.push('/course/addcourse');\r\n    }\r\n    const deleteCourse= async  ()=>{\r\n        if(selectionModel?.[0]){\r\n          const id=selectionModel[0];\r\n          await axios.delete(\"/course/\", {\r\n                 data: {\r\n                   id: id,\r\n                 },\r\n               })\r\n               .then((res) => {\r\n                   if(res.status===200){\r\n                     setRows(rows.filter(r => r.id!==id));\r\n                     window.location.href=\"/admin/course\"\r\n                   }\r\n               }).catch((error) => {alert(error)});\r\n        }\r\n    }\r\n    useEffect(() => {\r\n      axios.get(\"/account/check-login/\", {headers:{Authorization: 'Bearer '+localStorage.getItem('token')}} )\r\n      .then((res) => {\r\n        if(res.status===200){\r\n          axios.get(\"/course/\", {headers:{Authorization: 'Bearer '+localStorage.getItem('token')}} )\r\n          .then((res) => {\r\n            if(res.status===200){\r\n              setRows(res.data);\r\n            }\r\n          }).catch((error) => console.log(error.message));\r\n        }\r\n      }).catch((error) => {});\r\n\r\n  },[]);\r\n    return (\r\n        <>\r\n            <div style={{ height: 400, width: '100%' }}>\r\n            <DataGrid rows={rows} columns={columns} pageSize={5} \r\n                checkboxSelection \r\n                onSelectionModelChange={(newSelection) => {\r\n                    setselectionModel(newSelection.selectionModel);\r\n                }}\r\n                selectionModel={selectionModel}\r\n                />\r\n            </div>\r\n            <div>\r\n            <div className=\"list_btn\">\r\n                    <Button\r\n                        onClick={moveToAddCourseScreen}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        startIcon={<AddIcon />}\r\n                      />\r\n                      <Link\r\n                        to={`/course/updatecourse/${selectionModel?.[0]}`}\r\n                      >  \r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<UpdateIcon />}\r\n                      />\r\n                      </Link>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={deleteCourse}\r\n                        className={classes.button}\r\n                        startIcon={<DeleteIcon />}\r\n                      />\r\n                  </div>\r\n            </div>\r\n        </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}