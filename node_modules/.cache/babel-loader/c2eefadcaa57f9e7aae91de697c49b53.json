{"ast":null,"code":"var _jsxFileName = \"E:\\\\front-end\\\\src\\\\components\\\\admin\\\\TableAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { signout } from \"../../actions/userActions\";\nimport Cookie from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nexport default function TableAdmin({\n  columns\n}) {\n  _s();\n\n  const [selectionModel, setselectionModel] = useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n\n  const moveToAddCourseScreen = () => {\n    history.push(\"/course/addcourse\");\n  };\n\n  const deleteCourse = async () => {\n    if (selectionModel === null || selectionModel === void 0 ? void 0 : selectionModel[0]) {\n      const id = selectionModel[0];\n      await axios.delete(\"/course/\", {\n        data: {\n          id: id\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setRows(rows.filter(r => r.id !== id));\n          window.location.href = \"/admin/course\";\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios.get(\"/account/check-login/\", {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        axios.get(\"/course/\", {\n          headers: {\n            Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            setRows(res.data);\n          }\n        }).catch(error => console.log(error.message));\n      }\n    }).catch(error => {\n      dispatch(signout());\n      history.push(\"/signin\");\n      window.location.reload();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true,\n        onSelectionModelChange: newSelection => {\n          setselectionModel(newSelection.selectionModel);\n        },\n        selectionModel: selectionModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_btn\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: moveToAddCourseScreen,\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/course/updatecourse/${selectionModel === null || selectionModel === void 0 ? void 0 : selectionModel[0]}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            startIcon: /*#__PURE__*/_jsxDEV(UpdateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: deleteCourse,\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableAdmin, \"J4JeB2tfB42a9/yRujy/aN+++Xs=\", false, function () {\n  return [useStyles, useHistory, useDispatch];\n});\n\n_c = TableAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableAdmin\");","map":{"version":3,"sources":["E:/front-end/src/components/admin/TableAdmin.js"],"names":["React","useState","useEffect","DataGrid","Button","AddIcon","UpdateIcon","DeleteIcon","useHistory","makeStyles","axios","Link","useDispatch","signout","Cookie","useStyles","theme","button","margin","spacing","TableAdmin","columns","selectionModel","setselectionModel","classes","history","dispatch","rows","setRows","moveToAddCourseScreen","push","deleteCourse","id","delete","data","then","res","status","filter","r","window","location","href","catch","error","alert","get","headers","Authorization","console","log","message","reload","height","width","newSelection","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signout } from \"../../actions/userActions\";\r\nimport Cookie from \"js-cookie\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TableAdmin({ columns }) {\r\n  const [selectionModel, setselectionModel] = useState([]);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [rows, setRows] = useState([]);\r\n  const moveToAddCourseScreen = () => {\r\n    history.push(\"/course/addcourse\");\r\n  };\r\n  const deleteCourse = async () => {\r\n    if (selectionModel?.[0]) {\r\n      const id = selectionModel[0];\r\n      await axios\r\n        .delete(\"/course/\", {\r\n          data: {\r\n            id: id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            setRows(rows.filter((r) => r.id !== id));\r\n            window.location.href = \"/admin/course\";\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/account/check-login/\", {\r\n        headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          axios\r\n            .get(\"/course/\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + Cookie.get(\"access_token\"),\r\n              },\r\n            })\r\n            .then((res) => {\r\n              if (res.status === 200) {\r\n                setRows(res.data);\r\n              }\r\n            })\r\n            .catch((error) => console.log(error.message));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(signout());\r\n        history.push(\"/signin\");\r\n        window.location.reload();\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          checkboxSelection\r\n          onSelectionModelChange={(newSelection) => {\r\n            setselectionModel(newSelection.selectionModel);\r\n          }}\r\n          selectionModel={selectionModel}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div\r\n          className=\"list_btn\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <Button\r\n            onClick={moveToAddCourseScreen}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            startIcon={<AddIcon />}\r\n          />\r\n          <Link to={`/course/updatecourse/${selectionModel?.[0]}`}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<UpdateIcon />}\r\n            />\r\n          </Link>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={deleteCourse}\r\n            className={classes.button}\r\n            startIcon={<DeleteIcon />}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}