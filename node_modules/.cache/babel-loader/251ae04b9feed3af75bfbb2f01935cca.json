{"ast":null,"code":"import { USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT_FAIL, USER_SIGNOUT_REQUEST, USER_SIGNOUT_SUCCESS, USER_CHECKLOGIN_FAIL, USER_CHECKLOGIN_REQUEST, USER_CHECKLOGIN_SUCCESS, LOAD_COURSES_REQUEST, LOAD_COURSES_SUCCESS, LOAD_COURSES_FAIL, LOAD_FORUMS_REQUEST, LOAD_FORUMS_SUCCESS, LOAD_FORUMS_FAIL, ADD_FORUM_REQUEST, ADD_FORUM_SUCCESS, ADD_FORUM_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL } from \"../constants/userConstants\";\nimport Cookie from \"js-cookie\";\nimport Axios from \"axios\";\n\nconst signup = user => async dispatch => {\n  dispatch({\n    type: USER_SIGNUP_REQUEST,\n    payload: user\n  });\n\n  try {\n    console.log(user);\n    const {\n      data\n    } = await Axios.post(\"/account/create-user/\", user);\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signin = user => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/account/login/\", user);\n    console.log(data);\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data.user\n    });\n    Cookie.set(\"access_token\", data.access_token);\n    Cookie.set(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signout = () => async dispatch => {\n  dispatch({\n    type: USER_SIGNOUT_REQUEST,\n    payload: {}\n  });\n\n  try {\n    Cookie.remove(\"access_token\");\n    Cookie.remove(\"userInfo\");\n    dispatch({\n      type: USER_SIGNOUT_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNOUT_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst checklogin = () => async dispatch => {\n  dispatch({\n    type: USER_CHECKLOGIN_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/account/check-login/\", {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    });\n    dispatch({\n      type: USER_CHECKLOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_CHECKLOGIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst loadCourses = () => async dispatch => {\n  dispatch({\n    type: LOAD_COURSES_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/course/\");\n    dispatch({\n      type: LOAD_COURSES_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_COURSES_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst loadForums = () => async dispatch => {\n  dispatch({\n    type: LOAD_FORUMS_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/forum/\");\n    dispatch({\n      type: LOAD_FORUMS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_FORUMS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst addForum = value => async dispatch => {\n  dispatch({\n    type: ADD_FORUM_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/forum/\", value, {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    });\n    dispatch({\n      type: ADD_FORUM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_FORUM_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst updateProfile = value => async dispatch => {\n  dispatch({\n    type: UPDATE_PROFILE_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/account/update/\", value, {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    });\n    Cookie.set(\"userInfo\", JSON.stringify(data));\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signup, signin, signout, checklogin, loadCourses, loadForums, addForum, updateProfile };","map":{"version":3,"sources":["E:/front-end/src/actions/userActions.js"],"names":["USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT_FAIL","USER_SIGNOUT_REQUEST","USER_SIGNOUT_SUCCESS","USER_CHECKLOGIN_FAIL","USER_CHECKLOGIN_REQUEST","USER_CHECKLOGIN_SUCCESS","LOAD_COURSES_REQUEST","LOAD_COURSES_SUCCESS","LOAD_COURSES_FAIL","LOAD_FORUMS_REQUEST","LOAD_FORUMS_SUCCESS","LOAD_FORUMS_FAIL","ADD_FORUM_REQUEST","ADD_FORUM_SUCCESS","ADD_FORUM_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","Cookie","Axios","signup","user","dispatch","type","payload","console","log","data","post","error","message","signin","set","access_token","JSON","stringify","signout","remove","checklogin","get","headers","Authorization","loadCourses","loadForums","addForum","value","updateProfile"],"mappings":"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","sourcesContent":["import {\r\n  USER_SIGNUP_FAIL,\r\n  USER_SIGNUP_REQUEST,\r\n  USER_SIGNUP_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT_FAIL,\r\n  USER_SIGNOUT_REQUEST,\r\n  USER_SIGNOUT_SUCCESS,\r\n  USER_CHECKLOGIN_FAIL,\r\n  USER_CHECKLOGIN_REQUEST,\r\n  USER_CHECKLOGIN_SUCCESS,\r\n  LOAD_COURSES_REQUEST,\r\n  LOAD_COURSES_SUCCESS,\r\n  LOAD_COURSES_FAIL,\r\n  LOAD_FORUMS_REQUEST,\r\n  LOAD_FORUMS_SUCCESS,\r\n  LOAD_FORUMS_FAIL,\r\n  ADD_FORUM_REQUEST,\r\n  ADD_FORUM_SUCCESS,\r\n  ADD_FORUM_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport Cookie from \"js-cookie\";\r\nimport Axios from \"axios\";\r\n\r\nconst signup = (user) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNUP_REQUEST, payload: user });\r\n  try {\r\n    console.log(user);\r\n    const { data } = await Axios.post(\"/account/create-user/\", user);\r\n    dispatch({ type: USER_SIGNUP_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNUP_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst signin = (user) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: user });\r\n  try {\r\n    const { data } = await Axios.post(\"/account/login/\", user);\r\n    console.log(data);\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.user });\r\n    Cookie.set(\"access_token\", data.access_token);\r\n    Cookie.set(\"userInfo\", JSON.stringify(data.user));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst signout = () => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNOUT_REQUEST, payload: {} });\r\n  try {\r\n    Cookie.remove(\"access_token\");\r\n    Cookie.remove(\"userInfo\");\r\n    dispatch({ type: USER_SIGNOUT_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNOUT_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst checklogin = () => async (dispatch) => {\r\n  dispatch({ type: USER_CHECKLOGIN_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/account/check-login/\", {\r\n      headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n    });\r\n    dispatch({ type: USER_CHECKLOGIN_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_CHECKLOGIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst loadCourses = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_COURSES_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/course/\");\r\n    dispatch({ type: LOAD_COURSES_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: LOAD_COURSES_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst loadForums = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_FORUMS_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/forum/\");\r\n    dispatch({ type: LOAD_FORUMS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: LOAD_FORUMS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst addForum = (value) => async (dispatch) => {\r\n  dispatch({ type: ADD_FORUM_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.post(\"/forum/\", value, {\r\n      headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n    });\r\n    dispatch({ type: ADD_FORUM_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: ADD_FORUM_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst updateProfile = (value) => async (dispatch) => {\r\n  dispatch({ type: UPDATE_PROFILE_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.post(\"/account/update/\", value, {\r\n      headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n    });\r\n    Cookie.set(\"userInfo\", JSON.stringify(data));\r\n    dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: UPDATE_PROFILE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport {\r\n  signup,\r\n  signin,\r\n  signout,\r\n  checklogin,\r\n  loadCourses,\r\n  loadForums,\r\n  addForum,\r\n  updateProfile,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}