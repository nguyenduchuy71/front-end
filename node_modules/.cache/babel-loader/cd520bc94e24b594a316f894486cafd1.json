{"ast":null,"code":"import { USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT_FAIL, USER_SIGNOUT_REQUEST, USER_SIGNOUT_SUCCESS, USER_CHECKLOGIN_FAIL, USER_CHECKLOGIN_REQUEST, USER_CHECKLOGIN_SUCCESS, LOAD_COURSES_REQUEST, LOAD_COURSES_SUCCESS, LOAD_COURSES_FAIL, LOAD_FORUMS_REQUEST, LOAD_FORUMS_SUCCESS, LOAD_FORUMS_FAIL, ADD_FORUM_REQUEST, ADD_FORUM_SUCCESS, ADD_FORUM_FAIL } from \"../constants/userConstants\";\nimport Cookie from \"js-cookie\";\nimport Axios from \"axios\";\n\nconst signup = user => async dispatch => {\n  dispatch({\n    type: USER_SIGNUP_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/account/\", user);\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signin = (username, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      username,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/account/\", {\n      params: {\n        username: username,\n        password: password\n      }\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data.user\n    });\n    Cookie.set(\"access_token\", data.access_token);\n    Cookie.set(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signout = () => async dispatch => {\n  dispatch({\n    type: USER_SIGNOUT_REQUEST,\n    payload: {}\n  });\n\n  try {\n    Cookie.remove(\"access_token\");\n    Cookie.remove(\"userInfo\");\n    dispatch({\n      type: USER_SIGNOUT_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNOUT_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst checklogin = () => async dispatch => {\n  dispatch({\n    type: USER_CHECKLOGIN_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/account/check-login/\", {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    });\n    dispatch({\n      type: USER_CHECKLOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_CHECKLOGIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst loadCourses = () => async dispatch => {\n  dispatch({\n    type: LOAD_COURSES_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/course/\");\n    dispatch({\n      type: LOAD_COURSES_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_COURSES_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst loadForums = () => async dispatch => {\n  dispatch({\n    type: LOAD_FORUMS_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/forum/\");\n    dispatch({\n      type: LOAD_FORUMS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_FORUMS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst addForum = value => async dispatch => {\n  dispatch({\n    type: ADD_FORUM_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/forum/\", value, {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    });\n    const {\n      forums\n    } = await Axios.get(\"/forum/\");\n    dispatch({\n      type: ADD_FORUM_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: LOAD_FORUMS_SUCCESS,\n      payload: forums\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_FORUM_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signup, signin, signout, checklogin, loadCourses, loadForums, addForum };","map":{"version":3,"sources":["E:/front-end/src/actions/userActions.js"],"names":["USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT_FAIL","USER_SIGNOUT_REQUEST","USER_SIGNOUT_SUCCESS","USER_CHECKLOGIN_FAIL","USER_CHECKLOGIN_REQUEST","USER_CHECKLOGIN_SUCCESS","LOAD_COURSES_REQUEST","LOAD_COURSES_SUCCESS","LOAD_COURSES_FAIL","LOAD_FORUMS_REQUEST","LOAD_FORUMS_SUCCESS","LOAD_FORUMS_FAIL","ADD_FORUM_REQUEST","ADD_FORUM_SUCCESS","ADD_FORUM_FAIL","Cookie","Axios","signup","user","dispatch","type","payload","data","post","error","message","signin","username","password","get","params","set","access_token","JSON","stringify","signout","remove","checklogin","headers","Authorization","loadCourses","loadForums","addForum","value","forums"],"mappings":"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","sourcesContent":["import {\r\n  USER_SIGNUP_FAIL,\r\n  USER_SIGNUP_REQUEST,\r\n  USER_SIGNUP_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT_FAIL,\r\n  USER_SIGNOUT_REQUEST,\r\n  USER_SIGNOUT_SUCCESS,\r\n  USER_CHECKLOGIN_FAIL,\r\n  USER_CHECKLOGIN_REQUEST,\r\n  USER_CHECKLOGIN_SUCCESS,\r\n  LOAD_COURSES_REQUEST,\r\n  LOAD_COURSES_SUCCESS,\r\n  LOAD_COURSES_FAIL,\r\n  LOAD_FORUMS_REQUEST,\r\n  LOAD_FORUMS_SUCCESS,\r\n  LOAD_FORUMS_FAIL,\r\n  ADD_FORUM_REQUEST,\r\n  ADD_FORUM_SUCCESS,\r\n  ADD_FORUM_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport Cookie from \"js-cookie\";\r\nimport Axios from \"axios\";\r\n\r\nconst signup = (user) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNUP_REQUEST, payload: user });\r\n  try {\r\n    const { data } = await Axios.post(\"/account/\", user);\r\n    dispatch({ type: USER_SIGNUP_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNUP_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst signin = (username, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { username, password } });\r\n  try {\r\n    const { data } = await Axios.get(\"/account/\", {\r\n      params: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.user });\r\n    Cookie.set(\"access_token\", data.access_token);\r\n    Cookie.set(\"userInfo\", JSON.stringify(data.user));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst signout = () => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNOUT_REQUEST, payload: {} });\r\n  try {\r\n    Cookie.remove(\"access_token\");\r\n    Cookie.remove(\"userInfo\");\r\n    dispatch({ type: USER_SIGNOUT_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNOUT_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst checklogin = () => async (dispatch) => {\r\n  dispatch({ type: USER_CHECKLOGIN_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/account/check-login/\", {\r\n      headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n    });\r\n    dispatch({ type: USER_CHECKLOGIN_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: USER_CHECKLOGIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst loadCourses = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_COURSES_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/course/\");\r\n    dispatch({ type: LOAD_COURSES_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: LOAD_COURSES_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst loadForums = () => async (dispatch) => {\r\n  dispatch({ type: LOAD_FORUMS_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/forum/\");\r\n    dispatch({ type: LOAD_FORUMS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: LOAD_FORUMS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst addForum = (value) => async (dispatch) => {\r\n  dispatch({ type: ADD_FORUM_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.post(\"/forum/\", value, {\r\n      headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n    });\r\n    const { forums } = await Axios.get(\"/forum/\");\r\n    dispatch({ type: ADD_FORUM_SUCCESS, payload: data });\r\n    dispatch({ type: LOAD_FORUMS_SUCCESS, payload: forums });\r\n  } catch (error) {\r\n    dispatch({ type: ADD_FORUM_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport {\r\n  signup,\r\n  signin,\r\n  signout,\r\n  checklogin,\r\n  loadCourses,\r\n  loadForums,\r\n  addForum,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}