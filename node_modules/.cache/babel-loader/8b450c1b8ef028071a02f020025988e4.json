{"ast":null,"code":"var _jsxFileName = \"E:\\\\front-end\\\\src\\\\screens\\\\ForumScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Forum from \"../components/forum/Forum\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ForumScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { loadForums } from \"../actions/userActions\";\nimport Spinner from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForumScreen() {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    loading,\n    userInfo,\n    error\n  } = userSignin;\n  const userLoadForums = useSelector(state => state.userLoadForums);\n  const {\n    loadingForums,\n    forums,\n    errorLoadForums\n  } = userLoadForums;\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [questions, setQuestions] = useState([]);\n\n  const add = async () => {\n    if (userInfo) {\n      const data = {\n        title: input,\n        content: input,\n        date: Date().toLocaleString()\n      };\n      await axios.post(\"/forum/\", data, {\n        headers: {\n          Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          console.log(res.data);\n          setQuestions([res.data, ...questions]);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      history.push(\"/signin\");\n    }\n  };\n\n  useEffect(() => {\n    dispatch(loadForums());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingForums ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"input__question\",\n          placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: add,\n          children: \"\\u0110\\u0103ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forum\",\n        children: forums === null || forums === void 0 ? void 0 : forums.map(cmt => {\n          return /*#__PURE__*/_jsxDEV(Forum, {\n            cmt: cmt\n          }, cmt.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ForumScreen, \"hK9sOdswwtUc5h4dcxtUa/q6PMY=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = ForumScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForumScreen\");","map":{"version":3,"sources":["E:/front-end/src/screens/ForumScreen.js"],"names":["React","useState","useEffect","Forum","TextField","Button","useDispatch","useSelector","useHistory","axios","Cookie","loadForums","Spinner","ForumScreen","userSignin","state","loading","userInfo","error","userLoadForums","loadingForums","forums","errorLoadForums","input","setInput","dispatch","history","questions","setQuestions","add","data","title","content","date","Date","toLocaleString","post","headers","Authorization","get","then","res","status","console","log","catch","push","e","target","value","map","cmt","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Forum from \"../components/forum/Forum\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./ForumScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\nimport { loadForums } from \"../actions/userActions\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nexport default function ForumScreen() {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const userLoadForums = useSelector((state) => state.userLoadForums);\r\n  const { loadingForums, forums, errorLoadForums } = userLoadForums;\r\n  const [input, setInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [questions, setQuestions] = useState([]);\r\n  const add = async () => {\r\n    if (userInfo) {\r\n      const data = {\r\n        title: input,\r\n        content: input,\r\n        date: Date().toLocaleString(),\r\n      };\r\n      await axios\r\n        .post(\"/forum/\", data, {\r\n          headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            console.log(res.data);\r\n            setQuestions([res.data, ...questions]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      history.push(\"/signin\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(loadForums());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loadingForums ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div>\r\n          <div className=\"top\">\r\n            <TextField\r\n              id=\"input__question\"\r\n              placeholder=\"Nhập câu hỏi\"\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={add}>\r\n              Đăng\r\n            </Button>\r\n          </div>\r\n          <div className=\"forum\">\r\n            {forums?.map((cmt) => {\r\n              return <Forum key={cmt.id} cmt={cmt} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}