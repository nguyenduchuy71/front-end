{"ast":null,"code":"var _jsxFileName = \"E:\\\\front-end\\\\src\\\\screens\\\\ForumScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Forum from \"../components/forum/Forum\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './ForumScreen.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForumScreen() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const history = useHistory();\n  const [questions, setQuestions] = useState([]);\n\n  const add = async () => {\n    if (!user) {\n      history.push('/signin');\n    } else {\n      const data = {\n        \"title\": input,\n        \"content\": input,\n        \"date\": Date().toLocaleString()\n      };\n      await axios.post(\"/forum/\", data, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setQuestions([res.data, ...questions]);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    axios.get(\"/forum/\").then(res => {\n      if (res.status === 200) {\n        setQuestions(res.data);\n      }\n    }).catch(error => console.log(error.message));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"input__question\",\n        placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi\",\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: add,\n        children: \"\\u0110\\u0103ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forum\",\n      children: questions.map(cmt => {\n        return /*#__PURE__*/_jsxDEV(Forum, {\n          cmt: cmt\n        }, cmt.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForumScreen, \"GvfIgTmyRGFTMjOGnnNk//xRC2U=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = ForumScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForumScreen\");","map":{"version":3,"sources":["E:/front-end/src/screens/ForumScreen.js"],"names":["React","useState","useEffect","Forum","TextField","Button","useDispatch","useSelector","selectUser","useHistory","axios","ForumScreen","input","setInput","dispatch","user","history","questions","setQuestions","add","push","data","Date","toLocaleString","post","headers","Authorization","localStorage","getItem","then","res","status","catch","error","console","log","get","message","e","target","value","map","cmt","id"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport Forum from \"../components/forum/Forum\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport './ForumScreen.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ForumScreen() {\r\n  const [input, setInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const user=useSelector(selectUser);\r\n  const history=useHistory();\r\n  const [questions, setQuestions] = useState([]);\r\n  const add= async ()=>{\r\n    if(!user){\r\n      history.push('/signin');\r\n    }\r\n    else{\r\n      const data ={\r\n        \"title\":input,\r\n        \"content\":input,\r\n        \"date\":Date().toLocaleString()\r\n      }\r\n      await axios.post(\"/forum/\", data, {headers:{Authorization: 'Bearer '+localStorage.getItem('token')}})\r\n      .then((res) => {\r\n        if(res.status===200){\r\n          setQuestions([res.data,...questions]);\r\n        }\r\n      }).catch((error) => {console.log(error)});\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    axios.get(\"/forum/\")\r\n    .then((res) => {\r\n        if(res.status===200){\r\n          setQuestions(res.data);\r\n        }\r\n    }).catch((error) => console.log(error.message));\r\n  },[dispatch]);\r\n  return (\r\n    <>\r\n    <div className=\"top\">\r\n    <TextField\r\n          id=\"input__question\"\r\n          placeholder=\"Nhập câu hỏi\"\r\n          onChange={e=>setInput(e.target.value)}\r\n        />      \r\n      <Button variant=\"contained\" color=\"secondary\" onClick={add}>\r\n          Đăng\r\n      </Button>\r\n    </div>\r\n    <div className=\"forum\">\r\n      {questions.map((cmt) => {\r\n        return <Forum key={cmt.id} cmt={cmt} />\r\n      })}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}