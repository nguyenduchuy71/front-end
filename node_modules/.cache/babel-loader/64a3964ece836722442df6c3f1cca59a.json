{"ast":null,"code":"var _jsxFileName = \"E:\\\\front-end\\\\src\\\\screens\\\\ForumScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Forum from \"../components/forum/Forum\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./ForumScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { loadForums } from \"../actions/userActions\";\nimport Spinner from \"../components/Spinner\";\nimport { addForum } from \"../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForumScreen() {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    loading,\n    userInfo,\n    error\n  } = userSignin;\n  const userLoadForums = useSelector(state => state.userLoadForums);\n  const {\n    loadingForums,\n    forums,\n    errorLoadForums\n  } = userLoadForums;\n  const userAddForum = useSelector(state => state.userAddForum);\n  const {\n    loadingAddForum,\n    forum,\n    errorAddForum\n  } = userAddForum;\n  const [questions, setQuestions] = useState(forums);\n  const [input, setInput] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const add = async () => {\n    if (userInfo) {\n      const data = {\n        title: input,\n        content: input,\n        date: Date().toLocaleString()\n      };\n      dispatch(addForum(data));\n      setQuestions([forum, ...questions]);\n    } else {\n      history.push(\"/signin\");\n    }\n  };\n\n  useEffect(() => {\n    dispatch(loadForums());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingForums ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"input__question\",\n          placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: add,\n          children: \"\\u0110\\u0103ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forum\",\n        children: questions === null || questions === void 0 ? void 0 : questions.map(cmt => {\n          return /*#__PURE__*/_jsxDEV(Forum, {\n            cmt: cmt\n          }, cmt.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ForumScreen, \"Cr/aQGTG/rxph1rj+ARuEJrgMuo=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = ForumScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForumScreen\");","map":{"version":3,"sources":["E:/front-end/src/screens/ForumScreen.js"],"names":["React","useState","useEffect","Forum","TextField","Button","useDispatch","useSelector","useHistory","loadForums","Spinner","addForum","ForumScreen","userSignin","state","loading","userInfo","error","userLoadForums","loadingForums","forums","errorLoadForums","userAddForum","loadingAddForum","forum","errorAddForum","questions","setQuestions","input","setInput","dispatch","history","add","data","title","content","date","Date","toLocaleString","push","e","target","value","map","cmt","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Forum from \"../components/forum/Forum\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./ForumScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loadForums } from \"../actions/userActions\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { addForum } from \"../actions/userActions\";\r\n\r\nexport default function ForumScreen() {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const userLoadForums = useSelector((state) => state.userLoadForums);\r\n  const { loadingForums, forums, errorLoadForums } = userLoadForums;\r\n  const userAddForum = useSelector((state) => state.userAddForum);\r\n  const { loadingAddForum, forum, errorAddForum } = userAddForum;\r\n  const [questions, setQuestions] = useState(forums);\r\n  const [input, setInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const add = async () => {\r\n    if (userInfo) {\r\n      const data = {\r\n        title: input,\r\n        content: input,\r\n        date: Date().toLocaleString(),\r\n      };\r\n      dispatch(addForum(data));\r\n      setQuestions([forum, ...questions]);\r\n    } else {\r\n      history.push(\"/signin\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(loadForums());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {loadingForums ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div>\r\n          <div className=\"top\">\r\n            <TextField\r\n              id=\"input__question\"\r\n              placeholder=\"Nhập câu hỏi\"\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={add}>\r\n              Đăng\r\n            </Button>\r\n          </div>\r\n          <div className=\"forum\">\r\n            {questions?.map((cmt) => {\r\n              return <Forum key={cmt.id} cmt={cmt} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}