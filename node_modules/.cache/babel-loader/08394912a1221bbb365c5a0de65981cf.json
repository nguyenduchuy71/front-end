{"ast":null,"code":"import { USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT_FAIL, USER_SIGNOUT_REQUEST, USER_SIGNOUT_SUCCESS } from \"../constants/userConstants\";\nimport Cookie from \"js-cookie\";\nimport Axios from \"axios\";\n\nconst signup = user => async dispatch => {\n  dispatch({\n    type: USER_SIGNUP_REQUEST,\n    payload: user\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/account/\", user);\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signin = (username, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      username,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/account/\", {\n      params: {\n        username: username,\n        password: password\n      }\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data.user\n    });\n    Cookie.set(\"access_token\", data.access_token);\n    Cookie.set(\"userInfo\", JSON.stringify(data.user));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst signout = () => async dispatch => {\n  dispatch({\n    type: USER_SIGNOUT_REQUEST,\n    payload: {}\n  });\n\n  try {\n    Cookie.remove(\"access_token\");\n    Cookie.remove(\"userInfo\");\n    dispatch({\n      type: USER_SIGNOUT_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNOUT_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst checklogin = () => async dispatch => {\n  dispatch({\n    type: USER_CHECKOUT_REQUEST,\n    payload: {}\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/account/check-login/\", {\n      headers: {\n        Authorization: \"Bearer \" + Cookie.get(\"access_token\")\n      }\n    });\n    dispatch({\n      type: USER_CHECKOUT_SUCCESS,\n      payload: true\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_CHECKOUT_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signup, signin, signout, checklogin };","map":{"version":3,"sources":["E:/front-end/src/actions/userActions.js"],"names":["USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT_FAIL","USER_SIGNOUT_REQUEST","USER_SIGNOUT_SUCCESS","Cookie","Axios","signup","user","dispatch","type","payload","data","post","error","message","signin","username","password","get","params","set","access_token","JSON","stringify","signout","remove","checklogin","USER_CHECKOUT_REQUEST","headers","Authorization","USER_CHECKOUT_SUCCESS","USER_CHECKOUT_FAIL"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,iBAPF,EAQEC,oBARF,EASEC,oBATF,QAUO,4BAVP;AAWA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEb,mBAAR;AAA6Bc,IAAAA,OAAO,EAAEH;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACO,IAAN,CAAW,WAAX,EAAwBL,IAAxB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,mBAAR;AAA6Ba,MAAAA,OAAO,EAAE;AAAtC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEd,gBAAR;AAA0Be,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CARD;;AAUA,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOT,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,mBAAR;AAA6BW,IAAAA,OAAO,EAAE;AAAEM,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACa,GAAN,CAAU,WAAV,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNH,QAAAA,QAAQ,EAAEA,QADJ;AAENC,QAAAA,QAAQ,EAAEA;AAFJ;AADoC,KAAvB,CAAvB;AAMAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,mBAAR;AAA6BU,MAAAA,OAAO,EAAEC,IAAI,CAACJ;AAA3C,KAAD,CAAR;AACAH,IAAAA,MAAM,CAACgB,GAAP,CAAW,cAAX,EAA2BT,IAAI,CAACU,YAAhC;AACAjB,IAAAA,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuBE,IAAI,CAACC,SAAL,CAAeZ,IAAI,CAACJ,IAApB,CAAvB;AACD,GAVD,CAUE,OAAOM,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,gBAAR;AAA0BY,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CAfD;;AAiBA,MAAMU,OAAO,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AACxCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,IAAAA,OAAO,EAAE;AAAvC,GAAD,CAAR;;AACA,MAAI;AACFN,IAAAA,MAAM,CAACqB,MAAP,CAAc,cAAd;AACArB,IAAAA,MAAM,CAACqB,MAAP,CAAc,UAAd;AACAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,oBAAR;AAA8BO,MAAAA,OAAO,EAAE;AAAvC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,iBAAR;AAA2BS,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CATD;;AAWA,MAAMY,UAAU,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEkB,qBAAR;AAA+BjB,IAAAA,OAAO,EAAE;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,KAAK,CAACa,GAAN,CAAU,uBAAV,EAAmC;AACxDU,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYzB,MAAM,CAACc,GAAP,CAAW,cAAX;AAA7B;AAD+C,KAAnC,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEqB,qBAAR;AAA+BpB,MAAAA,OAAO,EAAE;AAAxC,KAAD,CAAR;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEsB,kBAAR;AAA4BrB,MAAAA,OAAO,EAAEG,KAAK,CAACC;AAA3C,KAAD,CAAR;AACD;AACF,CAVD;;AAYA,SAASR,MAAT,EAAiBS,MAAjB,EAAyBS,OAAzB,EAAiCE,UAAjC","sourcesContent":["import {\r\n  USER_SIGNUP_FAIL,\r\n  USER_SIGNUP_REQUEST,\r\n  USER_SIGNUP_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT_FAIL,\r\n  USER_SIGNOUT_REQUEST,\r\n  USER_SIGNOUT_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport Cookie from \"js-cookie\";\r\nimport Axios from \"axios\";\r\n\r\nconst signup = (user) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNUP_REQUEST, payload: user });\r\n  try {\r\n    const { data } = await Axios.post(\"/account/\", user);\r\n    dispatch({ type: USER_SIGNUP_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNUP_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst signin = (username, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { username, password } });\r\n  try {\r\n    const { data } = await Axios.get(\"/account/\", {\r\n      params: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.user });\r\n    Cookie.set(\"access_token\", data.access_token);\r\n    Cookie.set(\"userInfo\", JSON.stringify(data.user));\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst signout = () => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNOUT_REQUEST, payload: {} });\r\n  try {\r\n    Cookie.remove(\"access_token\");\r\n    Cookie.remove(\"userInfo\");\r\n    dispatch({ type: USER_SIGNOUT_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_SIGNOUT_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst checklogin = () => async (dispatch) => {\r\n  dispatch({ type: USER_CHECKOUT_REQUEST, payload: {} });\r\n  try {\r\n    const { data } = await Axios.get(\"/account/check-login/\", {\r\n      headers: { Authorization: \"Bearer \" + Cookie.get(\"access_token\") },\r\n    });\r\n    dispatch({ type: USER_CHECKOUT_SUCCESS, payload: true });\r\n  } catch (error) {\r\n    dispatch({ type: USER_CHECKOUT_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport { signup, signin, signout,checklogin };\r\n"]},"metadata":{},"sourceType":"module"}